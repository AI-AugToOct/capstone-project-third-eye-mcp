services:
  third-eye-api:
    build:
      context: .
      dockerfile: docker/Dockerfile.api
    environment:
      - GROQ_API_KEY=${GROQ_API_KEY}
      - DATABASE_URL=${DATABASE_URL:-postgresql://third_eye:${POSTGRES_PASSWORD:-third_eye}@postgres:5432/third_eye?sslmode=disable}
      - THIRD_EYE_API_KEY=${THIRD_EYE_API_KEY}
      - ADMIN_BOOTSTRAP_PASSWORD=${ADMIN_BOOTSTRAP_PASSWORD}
      - POSTGRES_REQUIRE_SSL=${POSTGRES_REQUIRE_SSL:-false}
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/live"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 60s
    restart: unless-stopped
  redis:
    image: redis:7
    ports: []
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
  postgres:
    image: pgvector/pgvector:pg16
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-third_eye}
      - POSTGRES_USER=${POSTGRES_USER:-third_eye}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-third_eye}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-third_eye} -d ${POSTGRES_DB:-third_eye}"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 45s
  mcp-bridge:
    build:
      context: .
      dockerfile: docker/Dockerfile.mcp
    environment:
      - API_URL=http://third-eye-api:8000
      - THIRD_EYE_API_KEY=${THIRD_EYE_API_KEY}
    depends_on:
      third-eye-api:
        condition: service_healthy
    ports:
      - "7331:7331"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:7331/health", "||", "exit", "1"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 45s

  overseer-ui:
    build:
      context: .
      dockerfile: docker/Dockerfile.overseer
    environment:
      - VITE_API_BASE_URL=${VITE_API_BASE_URL:-http://localhost:8000}
    depends_on:
      third-eye-api:
        condition: service_healthy
    ports:
      - "5173:5173"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:5173", "||", "exit", "1"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 45s

  control-plane-ui:
    build:
      context: .
      dockerfile: docker/Dockerfile.control-plane
    environment:
      - VITE_API_BASE_URL=${VITE_API_BASE_URL:-http://localhost:8000}
    depends_on:
      third-eye-api:
        condition: service_healthy
    ports:
      - "5174:5174"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:5174", "||", "exit", "1"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 45s

  prometheus:
    image: prom/prometheus:v2.54.0
    depends_on:
      - third-eye-api
    volumes:
      - ./docker/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"

volumes:
  postgres-data:

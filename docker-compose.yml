services:
  third-eye-api:
    build:
      context: .
      dockerfile: docker/Dockerfile.api
    environment:
      - GROQ_API_KEY=${GROQ_API_KEY}
      - DATABASE_URL=${DATABASE_URL:-postgresql://third_eye:third_eye@postgres:5432/third_eye?sslmode=disable}
      - THIRD_EYE_API_KEY=${THIRD_EYE_API_KEY}
      - ADMIN_BOOTSTRAP_PASSWORD=${ADMIN_BOOTSTRAP_PASSWORD}
      - POSTGRES_REQUIRE_SSL=${POSTGRES_REQUIRE_SSL:-false}
    volumes:
      - ./:/app
    ports:
      - "8000:8000"
    depends_on:
      - redis
      - postgres
  redis:
    image: redis:7
    ports: []
  postgres:
    image: pgvector/pgvector:pg16
    environment:
      - POSTGRES_DB=third_eye
      - POSTGRES_USER=third_eye
      - POSTGRES_PASSWORD=third_eye
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
  mcp-bridge:
    build:
      context: .
      dockerfile: docker/Dockerfile.mcp
    environment:
      - API_URL=http://third-eye-api:8000
      - THIRD_EYE_API_KEY=${THIRD_EYE_API_KEY}
    depends_on:
      - third-eye-api
    ports:
      - "7331:7331"

  overseer-ui:
    build:
      context: .
      dockerfile: docker/Dockerfile.overseer
    environment:
      - VITE_API_BASE_URL=http://localhost:8000
    depends_on:
      - third-eye-api
    ports:
      - "5173:5173"
    volumes:
      - ./apps/overseer:/app/apps/overseer

  control-plane-ui:
    build:
      context: .
      dockerfile: docker/Dockerfile.control-plane
    environment:
      - VITE_API_BASE_URL=http://localhost:8000
    depends_on:
      - third-eye-api
    ports:
      - "5174:5174"
    volumes:
      - ./apps/control-plane:/app/apps/control-plane

  prometheus:
    image: prom/prometheus:v2.54.0
    depends_on:
      - third-eye-api
    volumes:
      - ./docker/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"

volumes:
  postgres-data:
